
#user  nobody;
worker_processes  auto;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;
log_format upstreamlog '[$time_local] $remote_addr - $remote_user - $server_name to: $upstream_addr: $request upstream_response_time $upstream_response_time msec $msec request_time $request_time';

access_log  /usr/local/var/log/nginx.access.log upstreamlog;
    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    upstream Auth {
        server        127.0.0.1:8084;
    }

    upstream API {
        server        127.0.0.1:8081;
    }

    upstream Chat {
        server        127.0.0.1:8080;
    }

    upstream Polling {
        server        127.0.0.1:8082;
    }

    upstream File {
        server        127.0.0.1:8083;
    }

    server {

        listen       80;
        server_name  localhost;

        location / {
            root   html;
            index  index.html index.htm;
        }

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        location ^~ /chat {
            proxy_pass http://Chat;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_set_header Origin "";
        }

        location ^~ /auth {
            proxy_pass   http://Auth;
        }

        location ^~ /api {
            proxy_pass   http://API;
        }

        location ^~ /message {
            proxy_pass   http://Polling;
        }

        location ^~ /File {
            proxy_pass   http://file;
        }

    }

}
